name: CI

on:
  push:
    branches:
      - master
      - 'v*'
  pull_request: {}
  schedule:
    - cron:  '0 3 * * *' # daily, at 3am

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        workspace:
          - ember-simple-auth
          - classic-test-app
          - test-app

    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: install dependencies
        run: pnpm install

      - name: lint
        run: pnpm run --filter ${{ matrix.workspace }} lint

  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        workspace:
          - ember-simple-auth
          - classic-test-app
          - test-app
        test-suite:
          - test:one ember-lts-3.28
          - test:one ember-4.0
          - test:one ember-lts-4.4
          - test:one ember-lts-4.8
          - test:one ember-default
          - test:one ember-release
        allow-failure: [false]
        include:
          - workspace: ember-simple-auth
            test-suite: "test:one embroider-safe"
            allow-failure: false
          - workspace: ember-simple-auth
            test-suite: "test:one embroider-optimized"
            allow-failure: false

    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: install dependencies
        run: pnpm install

      - name: tests
        run: pnpm run --filter ${{ matrix.workspace }} ${{ matrix.test-suite }}
        continue-on-error: ${{ matrix.allow-failure }}

  allow-fail-try-scenarios:
    name: ${{ matrix.workspace }} ${{ matrix.test-suite }} - Allowed to fail
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      pull-requests: write

    strategy:
      fail-fast: false
      matrix:
        workspace:
          - ember-simple-auth
          - classic-test-app
          - test-app
        test-suite:
          - test:one ember-beta
          - test:one ember-canary

    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: install dependencies
        run: pnpm install

      - name: Allowed to fail tests
        id: allowed_to_fail_tests
        run: pnpm run --filter ${{ matrix.workspace }} ${{ matrix.test-suite }}
        continue-on-error: true

      - uses: mainmatter/continue-on-error-comment@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          outcome: ${{ steps.allowed_to_fail_tests.outcome }}
          test-id: ${{ matrix.workspace }} ${{ matrix.test-suite }}

  extra-tests:
    name: Tests (Floating Dependenies)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        workspace:
          - ember-simple-auth
          - classic-test-app
          - test-app

    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: install dependencies
        run: pnpm install --no-lockfile

      - name: tests
        run: pnpm run --filter ${{ matrix.workspace }} test
        continue-on-error: true

  node-tests:
    name: Node Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: install dependencies
        run: pnpm install

      - name: tests
        run: pnpm run --filter ember-simple-auth test:node
